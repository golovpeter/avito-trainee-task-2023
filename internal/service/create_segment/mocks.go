// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package create_segment is a generated GoMock package.
package create_segment

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCreateSegmentService is a mock of CreateSegmentService interface.
type MockCreateSegmentService struct {
	ctrl     *gomock.Controller
	recorder *MockCreateSegmentServiceMockRecorder
}

// MockCreateSegmentServiceMockRecorder is the mock recorder for MockCreateSegmentService.
type MockCreateSegmentServiceMockRecorder struct {
	mock *MockCreateSegmentService
}

// NewMockCreateSegmentService creates a new mock instance.
func NewMockCreateSegmentService(ctrl *gomock.Controller) *MockCreateSegmentService {
	mock := &MockCreateSegmentService{ctrl: ctrl}
	mock.recorder = &MockCreateSegmentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateSegmentService) EXPECT() *MockCreateSegmentServiceMockRecorder {
	return m.recorder
}

// CreateSegment mocks base method.
func (m *MockCreateSegmentService) CreateSegment(data *CreateSegmentData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSegment", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSegment indicates an expected call of CreateSegment.
func (mr *MockCreateSegmentServiceMockRecorder) CreateSegment(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSegment", reflect.TypeOf((*MockCreateSegmentService)(nil).CreateSegment), data)
}
