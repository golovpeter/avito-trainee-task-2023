// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package get_percent_segments is a generated GoMock package.
package get_percent_segments

import (
	reflect "reflect"

	percent_segments "github.com/golovpeter/avito-trainee-task-2023/internal/cache/percent_segments"
	gomock "go.uber.org/mock/gomock"
)

// MockGetPercentSegmentsService is a mock of GetPercentSegmentsService interface.
type MockGetPercentSegmentsService struct {
	ctrl     *gomock.Controller
	recorder *MockGetPercentSegmentsServiceMockRecorder
}

// MockGetPercentSegmentsServiceMockRecorder is the mock recorder for MockGetPercentSegmentsService.
type MockGetPercentSegmentsServiceMockRecorder struct {
	mock *MockGetPercentSegmentsService
}

// NewMockGetPercentSegmentsService creates a new mock instance.
func NewMockGetPercentSegmentsService(ctrl *gomock.Controller) *MockGetPercentSegmentsService {
	mock := &MockGetPercentSegmentsService{ctrl: ctrl}
	mock.recorder = &MockGetPercentSegmentsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetPercentSegmentsService) EXPECT() *MockGetPercentSegmentsServiceMockRecorder {
	return m.recorder
}

// GetPercentSegments mocks base method.
func (m *MockGetPercentSegmentsService) GetPercentSegments() (map[string]percent_segments.Segment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPercentSegments")
	ret0, _ := ret[0].(map[string]percent_segments.Segment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPercentSegments indicates an expected call of GetPercentSegments.
func (mr *MockGetPercentSegmentsServiceMockRecorder) GetPercentSegments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPercentSegments", reflect.TypeOf((*MockGetPercentSegmentsService)(nil).GetPercentSegments))
}
