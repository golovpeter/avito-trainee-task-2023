// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package change_user_segments is a generated GoMock package.
package change_user_segments

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockChangeUserSegmentsService is a mock of ChangeUserSegmentsService interface.
type MockChangeUserSegmentsService struct {
	ctrl     *gomock.Controller
	recorder *MockChangeUserSegmentsServiceMockRecorder
}

// MockChangeUserSegmentsServiceMockRecorder is the mock recorder for MockChangeUserSegmentsService.
type MockChangeUserSegmentsServiceMockRecorder struct {
	mock *MockChangeUserSegmentsService
}

// NewMockChangeUserSegmentsService creates a new mock instance.
func NewMockChangeUserSegmentsService(ctrl *gomock.Controller) *MockChangeUserSegmentsService {
	mock := &MockChangeUserSegmentsService{ctrl: ctrl}
	mock.recorder = &MockChangeUserSegmentsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChangeUserSegmentsService) EXPECT() *MockChangeUserSegmentsServiceMockRecorder {
	return m.recorder
}

// ChangeUserSegments mocks base method.
func (m *MockChangeUserSegmentsService) ChangeUserSegments(data *ChangeUserSegmentsData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeUserSegments", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeUserSegments indicates an expected call of ChangeUserSegments.
func (mr *MockChangeUserSegmentsServiceMockRecorder) ChangeUserSegments(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeUserSegments", reflect.TypeOf((*MockChangeUserSegmentsService)(nil).ChangeUserSegments), data)
}
