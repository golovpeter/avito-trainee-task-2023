// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package delete_expired_user_segments is a generated GoMock package.
package delete_expired_user_segments

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDeleteExpiredUserSegmentsService is a mock of DeleteExpiredUserSegmentsService interface.
type MockDeleteExpiredUserSegmentsService struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteExpiredUserSegmentsServiceMockRecorder
}

// MockDeleteExpiredUserSegmentsServiceMockRecorder is the mock recorder for MockDeleteExpiredUserSegmentsService.
type MockDeleteExpiredUserSegmentsServiceMockRecorder struct {
	mock *MockDeleteExpiredUserSegmentsService
}

// NewMockDeleteExpiredUserSegmentsService creates a new mock instance.
func NewMockDeleteExpiredUserSegmentsService(ctrl *gomock.Controller) *MockDeleteExpiredUserSegmentsService {
	mock := &MockDeleteExpiredUserSegmentsService{ctrl: ctrl}
	mock.recorder = &MockDeleteExpiredUserSegmentsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteExpiredUserSegmentsService) EXPECT() *MockDeleteExpiredUserSegmentsServiceMockRecorder {
	return m.recorder
}

// DeleteExpiredUserSegments mocks base method.
func (m *MockDeleteExpiredUserSegmentsService) DeleteExpiredUserSegments() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteExpiredUserSegments")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteExpiredUserSegments indicates an expected call of DeleteExpiredUserSegments.
func (mr *MockDeleteExpiredUserSegmentsServiceMockRecorder) DeleteExpiredUserSegments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteExpiredUserSegments", reflect.TypeOf((*MockDeleteExpiredUserSegmentsService)(nil).DeleteExpiredUserSegments))
}
