// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package delete_segment is a generated GoMock package.
package delete_segment

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDeleteSegmentService is a mock of DeleteSegmentService interface.
type MockDeleteSegmentService struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteSegmentServiceMockRecorder
}

// MockDeleteSegmentServiceMockRecorder is the mock recorder for MockDeleteSegmentService.
type MockDeleteSegmentServiceMockRecorder struct {
	mock *MockDeleteSegmentService
}

// NewMockDeleteSegmentService creates a new mock instance.
func NewMockDeleteSegmentService(ctrl *gomock.Controller) *MockDeleteSegmentService {
	mock := &MockDeleteSegmentService{ctrl: ctrl}
	mock.recorder = &MockDeleteSegmentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteSegmentService) EXPECT() *MockDeleteSegmentServiceMockRecorder {
	return m.recorder
}

// DeleteSegment mocks base method.
func (m *MockDeleteSegmentService) DeleteSegment(data *DeleteSegmentData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSegment", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSegment indicates an expected call of DeleteSegment.
func (mr *MockDeleteSegmentServiceMockRecorder) DeleteSegment(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSegment", reflect.TypeOf((*MockDeleteSegmentService)(nil).DeleteSegment), data)
}
